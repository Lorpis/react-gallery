{"version":3,"sources":["components/images/react.png","components/Header.js","exercises/IsBoiling.js","components/voltageDropCal/voltageDrop.js","components/CECAssist/Grid.js","components/navBar/MainTabs.js","components/cssCals/cssTools/ColorMixer.js","containers/App.js","index.js"],"names":["module","exports","Header","ReactIcon","require","className","alt","src","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","BoilingVerdict","props","TemperatureInput","handleChange","bind","e","this","onTemperatureChange","target","value","scale","onChange","React","Component","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","unitType","voltage","amps","ft","m","kcmils","metal","pvd","vd","p","temp","voltages","phases","metals","kValues","copper","k","tempCo","aluminum","carbon","constantan","gold","iron","lead","manganin","mercury","nichrome","nickle","platinum","silver","tungsten","gauges","makePercent","item","outOf","String","LimitBarEl","limitMap","barList","map","bar","style","width","Result","lengthScale","barlist","percent","lengths","overRatedLength","ratedLength","underRatedLength","classNames","totalLength","usedUp","i","length","sectionLength","MenuList","listItem","list","key","onClick","Select","handleClick","event","onSelect","items","Input","onValueChange","fieldValue","inputValue","unit","kCalc","toPVD","volts","toVDfromPVD","VoltageDropCalc","cmils","parseInt","toLengthFromPVD","multiple","cm","disScale","toMeters","isNumberKey","number","str","charAt","indexOf","measure","feet","toFeet","meters","toAmps","watts","toWatts","phase","voltageDropInputs","handleLChange","handleMetalChange","handlePVDChange","handleVDChange","handleWattChange","handleAmpChange","handleFootChange","handleMeterChange","handleMeterChanged","handleAWGChange","handlekcmilsChange","handleWireClick","handleVoltageChange","handleVoltageClick","handlePhaseChange","handlePhaseClick","handleMetalClick","handleTempChange","lm","vdScale","vdMag","powMag","powScale","distance","wireScale","AWGState","milsState","wireIndex","calcScale","console","log","sqrt","mutiple","ampInput","wattInput","biggerCM","smallerCM","legendTitle","navObjs","headerTabs","name","children","display","feature","VoltageDrop","action","ConCalc","TruthList","tabsList","truthList","NavBar","selectMap","lastactiveId","activeSiblings","navList","featured","handleChildClick","id","lastId","navlength","nextGen","thisGen","lastGen","pop","lastGenTruthList","undefined","nextGenTruthList","currentNavebar","clickHandler","tabEls","tab","index","Tabs","Featured","colorSliderObj","colors","type","min","max","class","paint","rh","gs","bl","a","backgroundColor","App","MainTabs","ReactDOM","render","document","getElementById"],"mappings":"yLAAAA,EAAOC,QAAU,IAA0B,mC,gKCc5BC,G,kBAXA,WACd,IACIC,EAAYC,EAAQ,IACxB,OACC,yBAAKC,UAAY,iBAChB,yBAAKC,IAAM,UAAUD,UAAY,YAAYE,IAAOJ,IACpD,wBAAIE,UAAY,UAAhB,IALU,yCAKV,Q,0CCJGG,G,MAAa,CACjBC,EAAG,UACHC,EAAG,eAGL,SAASC,EAAUC,GACjB,OAA2B,GAAnBA,EAAa,IAAU,EAGjC,SAASC,EAAaC,GACpB,OAAkB,EAAVA,EAAc,EAAK,GAG7B,SAASC,EAAWC,EAAaC,GAC/B,IAAMC,EAAQC,WAAWH,GACzB,GAAII,OAAOC,MAAMH,GACf,MAAO,GAET,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,WAGjB,SAASC,EAAeC,GACtB,OAAIA,EAAMb,SAAW,IACZ,oDAEF,wD,IAGHc,E,YACJ,WAAYD,GAAQ,IAAD,8BACjB,4CAAMA,KACDE,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,0EAKNC,GACXC,KAAKL,MAAMM,oBAAoBF,EAAEG,OAAOC,S,+BAKxC,IAAMnB,EAAcgB,KAAKL,MAAMX,YACzBoB,EAAQJ,KAAKL,MAAMS,MACzB,OACE,kCACE,wDAA8B5B,EAAW4B,GAAzC,KACA,2BAAOD,MAAOnB,EACPqB,SAAUL,KAAKH,oB,GAlBCS,IAAMC,WA+DtBC,E,YAtCb,WAAYb,GAAQ,IAAD,8BACjB,4CAAMA,KACDc,oBAAsB,EAAKA,oBAAoBX,KAAzB,gBAC3B,EAAKY,uBAAyB,EAAKA,uBAAuBZ,KAA5B,gBAC9B,EAAKa,MAAQ,CAAC3B,YAAa,GAAIoB,MAAO,KAJrB,E,iFAOCpB,GAClBgB,KAAKY,SAAS,CAACR,MAAO,IAAKpB,kB,6CAGNA,GACrBgB,KAAKY,SAAS,CAACR,MAAO,IAAKpB,kB,+BAI3B,IAAMoB,EAAQJ,KAAKW,MAAMP,MACnBpB,EAAcgB,KAAKW,MAAM3B,YACzBF,EAAoB,MAAVsB,EAAgBrB,EAAWC,EAAaL,GAAaK,EAC/DJ,EAAuB,MAAVwB,EAAgBrB,EAAWC,EAAaH,GAAgBG,EAE3E,OACE,6BACE,kBAAC,EAAD,CACEoB,MAAM,IACNpB,YAAaF,EACbmB,oBAAqBD,KAAKS,sBAC5B,kBAAC,EAAD,CACEL,MAAM,IACNpB,YAAaJ,EACbqB,oBAAqBD,KAAKU,yBAC5B,kBAAChB,EAAD,CACEZ,QAASK,WAAWL,U,GAjCLwB,IAAMC,W,OClDzBM,G,MCEaP,IAAMC,U,MDFR,CAChBO,QAAQ,UACRC,KAAK,UACLC,GAAG,eACHC,EAAE,mBACFC,OAAO,OACPC,MAAM,QACNC,IAAI,iBACJC,GAAG,eACHC,EAAE,QACFC,KAAK,WAMAC,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/CC,EAAS,CAAC,EAAG,GAEbC,EAAS,CAAC,SAAU,WAAY,SAAU,aAAc,OAAQ,OAAQ,OAAQ,WAAY,UAAW,WAAY,SAAU,WAAY,SAAU,YACnJC,EAAU,CAACC,OAAO,CAACC,EAAE,KAAMC,OAAO,OAChCC,SAAS,CAACF,EAAE,GAAIC,OAAO,MACvBE,OAAO,CAACH,EAAE,KAAOC,QAAQ,MACzBG,WAAW,CAACJ,EAAE,IAAKC,OAAO,MAC1BI,KAAK,CAACL,EAAE,GAAIC,OAAO,MACnBK,KAAK,CAACN,EAAE,GAAIC,OAAO,OACnBM,KAAK,CAACP,EAAE,IAAKC,OAAO,OACpBO,SAAS,CAACR,EAAE,IAAKC,OAAO,GACxBQ,QAAQ,CAACT,EAAE,IAAKC,OAAO,OACvBS,SAAS,CAACV,EAAE,IAAKC,OAAO,MACxBU,OAAO,CAACX,EAAE,GAAIC,OAAO,MACrBW,SAAS,CAACZ,EAAE,GAAIC,OAAO,OACvBY,OAAO,CAACb,EAAE,IAAKC,OAAO,OACtBa,SAAS,CAACd,EAAE,KAAMC,OAAO,OAK3Bc,EAAS,CAAC,UAAU,KAAK,KAAK,KAC3B,KAAK,KAAK,IACV,IAAI,IAAI,IACR,IAAI,IAAI,IACR,KAAK,MAAM,QACd1B,EAAS,CAAC,SAAS,QAAQ,QAAQ,QACnC,QAAQ,SAAS,SACjB,SAAS,SAAS,SAClB,SAAS,SAAS,UAClB,UAAU,UAAU,UACpB,MAAM,MAAM,MACZ,MAAM,MAAM,MACZ,MAAM,MAAM,MACZ,MAAM,OAAO,OACb,OAAO,OAAO,QAId2B,EAAc,SAACC,EAAMC,GAC1B,OAAOC,OAAOzD,KAAKC,MAAM,IAAIsD,EAAKC,IAAU,KAuDvCE,EAAa,SAACtD,GACDA,EAAK,YAAvB,IACIuD,EAAWvD,EAAMwD,QAAQC,KAAI,SAACC,GAAD,OAChC,yBACAhF,UAAagF,EAAG,UAChBC,MAAS,CAACC,MAAM,GAAD,OAAKF,EAAG,WACtBA,EAAG,OAHJ,IAGiB1D,EAAK,gBAGtB,OACC,yBAAKtB,UAAY,iBACf6E,IAKCM,E,YACL,WAAY7D,GAAO,IAAD,8BACjB,4CAAMA,KACDE,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,8GAQjB,IAAM2D,EAAczD,KAAKL,MAAM8D,YAU3BC,EAvFU,SAAC/D,GAOhB,IANA,IAKIgE,EALAC,EAAU,CAACjE,EAAMkE,gBAAiBlE,EAAMmE,YAAanE,EAAMoE,kBAAmB,GAC9EC,EAAa,CAAC,YAAY,QAAS,aAAc,aACjDC,EAActE,EAAMsE,YAActE,EAAMsE,YAAa,IACrDP,EAAU,GACVQ,EAAS,EAEJC,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAAI,CACvC,IAAIC,EAASR,EAAQO,IAAM,EAAI,aAAaP,EAAQO,GAEhDE,EAAgBD,GADTD,EAAI,EAAIP,EAAQO,EAAE,GAAI,GAEjC,GAAKE,EAAgBH,EAAUD,EAC9BC,GAAUG,EACVV,EAAUd,EAAYwB,EAAeJ,GACrCP,EAAQS,GAAK,CAAC9F,UAAU2F,EAAWG,GAAIR,QAAQA,EAASS,OAAOA,QACxD,GAAIH,EAAcC,EACzBG,EAAgBJ,EAAcC,EAC9BA,EAASD,EACTN,EAAUd,EAAYwB,EAAeJ,GACrCP,EAAQS,GAAK,CAAC9F,UAAU2F,EAAWG,GAAIR,QAAQA,EAASS,OAAOA,QACzD,GAAIF,GAAYD,EAAe,MAGvC,OAAOP,EAgEQP,CAAQnD,KAAKL,OAC3B,OACC,6BACC,2DACA,kBAAC,EAAD,CACCwD,QAAWO,EACXD,YAAeA,S,GAzBCnD,IAAMC,WAmCrB+D,EAAW,SAAC3E,GACjB,IAAIoB,EAAO,EACPwD,EAAW5E,EAAM6E,KAAKpB,KAAI,SAACN,GAAD,OAC7B,4BAAQ2B,IAAO1D,EAAMZ,MAASY,KAA9B,IAAwC+B,EAAxC,QAED,OACC,4BACEzC,SAAYV,EAAMU,SAClBqE,QAAW/E,EAAM+E,SAChBH,IAMCI,E,YACL,WAAYhF,GAAO,IAAD,8BACjB,4CAAMA,KACDE,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAK8E,YAAc,EAAKA,YAAY9E,KAAjB,gBAHF,E,0EAOL+E,GACZ7E,KAAKL,MAAMmF,SAASD,EAAM3E,OAAOC,S,oCAGjCH,KAAKL,MAAM+E,QAAQ1E,KAAKL,MAAMS,S,+BAI9B,IAAMA,EAAQJ,KAAKL,MAAMS,MACnB2E,EAAQ/E,KAAKL,MAAMoF,MAEzB,OACC,6BACA,kBAAC,EAAD,CACCP,KAAQO,EACR1E,SAAYL,KAAKH,aACjB6E,QAAW1E,KAAK4E,cACdxE,O,GAzBeE,IAAMC,WAmCrByE,E,YACL,WAAYrF,GAAO,IAAD,8BACjB,4CAAMA,KACDE,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,0EAKL+E,GAIT7E,KAAKL,MAAMsF,cAAcJ,EAAM3E,OAAOC,S,+BAQzC,IAAM+E,EAAalF,KAAKL,MAAMwF,WACxBC,EAAOpF,KAAKL,MAAMyF,KACxB,OACC,kCACC,0CAAiBvE,EAASuE,GAA1B,KACA,6BACC,2BACCjF,MAAS+E,EACT7E,SAAYL,KAAKH,qB,GA1BHS,IAAMC,WAsCpB8E,EAAQ,SAAClE,EAAOI,GACrB,IAEIjC,EAFSqC,EAAQR,GAAR,GAEQ,EADRQ,EAAQR,GAAR,QACqBI,EAAO,KACzC,OAAShC,KAAKC,MAAe,IAATF,GAAiB,KAGhCgG,EAAQ,SAACC,EAAOlE,GAAQ,OAAOA,EAAGkE,GAClCC,EAAa,SAACD,EAAOnE,GAAS,OAAOmE,GAAOnE,EAAI,MAMhDqE,EAAkB,SAAC9F,GAExB,IAAIkC,EAAIF,EAAQhC,EAAMwB,OAClBuE,EAA+B,IAAvBC,SAAShG,EAAMuB,QACvBG,EAAM,EAAEQ,EAAElC,EAAMoB,KAAKpB,EAAMyE,OAAQsB,EACnCtE,EAAM,IAAIC,EAAI1B,EAAM4F,MAIxB,OAAO,oDAA0BlE,EAA1B,sBAAiDD,EAAjD,yBAGFwE,EAAkB,SAAC/D,EAAGgE,EAAU9E,EAAMwE,EAAOvE,EAAI8E,EAAI1E,EAAK2E,GAC/D,IACI3B,EADMhD,EAAImE,EAAO,IACHO,GAAKjE,EAAEgE,EAAU9E,GAInC,OAHAqD,EAAShF,OAAOC,MAAM+E,GAAUA,EAAS,EAAGA,EAC5CA,EAAsB,MAAb2B,EAAmBhH,EAAWqF,EAAQ4B,GAAW5B,EAElD7E,KAAKC,MAAa,IAAP4E,GAAY,KAI1B6B,EAAc,SAACC,GACpB,IAAIC,EAAMD,EACV,GAAmC,MAA9BC,EAAIC,OAAOD,EAAI/B,OAAQ,IAAkB+B,EAAIE,QAAQ,KAAOF,EAAI/B,OAAO,EACvE,CACJ,IAAMlF,EAAQC,WAAW+G,GACzB,OAAG9G,OAAOC,MAAMH,GAAe,IAClBA,EAJoE,OAAOiH,GASpFpH,EAAa,SAACuH,EAASrH,EAASsG,GACrC,IAAMrG,EAAQC,WAAWmH,GACzB,GAAGlH,OAAOC,MAAMH,GACf,MAAO,IAER,IAAMI,EAASL,EAAQC,EAAOqG,GAC9B,OAAOhG,KAAKC,MAAe,IAATF,GAAiB,KAS9B0G,EAAW,SAACO,GAAW,OAAOA,EAAO,OACrCC,EAAS,SAACC,GAAY,OAAgB,MAATA,GAG7BC,EAAS,SAACC,EAAOpB,GAAW,OAAOoB,EAAMpB,GACzCqB,EAAU,SAAC7F,EAAMwE,EAAOsB,GAAW,OAAO9F,EAAKwE,GAiatCuB,E,YArZd,WAAYnH,GAAO,IAAD,8BACjB,4CAAMA,KAIDoH,cAAgB,EAAKA,cAAcjH,KAAnB,gBACrB,EAAKkH,kBAAoB,EAAKA,kBAAkBlH,KAAvB,gBACzB,EAAKmH,gBAAkB,EAAKA,gBAAgBnH,KAArB,gBAEvB,EAAKoH,eAAiB,EAAKA,eAAepH,KAApB,gBACtB,EAAKqH,iBAAmB,EAAKA,iBAAiBrH,KAAtB,gBACxB,EAAKsH,gBAAkB,EAAKA,gBAAgBtH,KAArB,gBAEvB,EAAKuH,iBAAmB,EAAKA,iBAAiBvH,KAAtB,gBACxB,EAAKwH,kBAAoB,EAAKC,mBAAmBzH,KAAxB,gBAEzB,EAAK0H,gBAAkB,EAAKA,gBAAgB1H,KAArB,gBACvB,EAAK2H,mBAAqB,EAAKA,mBAAmB3H,KAAxB,gBAC1B,EAAK4H,gBAAkB,EAAKA,gBAAgB5H,KAArB,gBACvB,EAAK6H,oBAAsB,EAAKA,oBAAoB7H,KAAzB,gBAC3B,EAAK8H,mBAAqB,EAAKA,mBAAmB9H,KAAxB,gBAC1B,EAAK+H,kBAAoB,EAAKA,kBAAkB/H,KAAvB,gBACzB,EAAKgI,iBAAmB,EAAKA,iBAAiBhI,KAAtB,gBAExB,EAAKkH,kBAAoB,EAAKA,kBAAkBlH,KAAvB,gBACzB,EAAKiI,iBAAmB,EAAKA,iBAAiBjI,KAAtB,gBACxB,EAAKkI,iBAAmB,EAAKA,iBAAiBlI,KAAtB,gBAGxB,EAAKa,MAAQ,CACZ3B,YAAY,GACZ6C,EAAE,KACFgE,SAAS,EAGToC,GAAI,IACJ9G,MAAM,SAIN+G,QAAQ,GACR7G,GAAG,EACH8G,MAAM,EAGNrH,QAAS,IACTC,KAAK,EACLqH,OAAQ,EACRC,SAAU,GACVxB,MAAM,EAINyB,SAAU,EACVvC,SAAU,IACV3B,OAAQ,EAIRmE,UAAU,IACVC,SAAS5F,EACT6F,UAAWvH,EACXwH,UAAU,EACVhD,MAAM,EAENiD,UAAU,IAjEM,E,iFAsEjBC,QAAQC,IAAI,a,6CAGZD,QAAQC,IAAI,a,oCAgBChE,GACb7E,KAAKY,SAAS,CAACwD,OAAOS,M,0CAIHA,GACnB,IAAI/D,EAAUU,EAASqD,GACvB7E,KAAKY,SAAS,CAACE,c,yCAEG+D,M,qCAGJA,GACd,IAAIxD,EAAK4E,EAAYpB,GACrB7E,KAAKY,SAAS,CAAC+H,UAAW,KAAMT,QAAQ,KAAMC,MAAM9G,EAAIA,S,sCAGzCwD,GACf,IAAIsD,EAAQlC,EAAYpB,GACpBxD,EAAKtC,EAAWoJ,EAAO3C,EAAaxF,KAAKW,MAAMG,SACnDd,KAAKY,SAAS,CAAC+H,UAAU,KAAMT,QAAS,MAAOC,QAAO9G,S,sCAMvCwD,GACf,IAAI9D,EAAOkF,EAAYpB,GACvB7E,KAAKY,SAAS,CAACyH,SAAS,OAAQD,OAAOrH,EAAOA,W,uCAE9B8D,GAChB,IAAIuD,EAASnC,EAAYpB,GACrB9D,EAAOhC,EAAWqJ,EAAS1B,EAAQ1G,KAAKW,MAAMG,QAAQvB,KAAKuJ,KAAK9I,KAAKW,MAAMkG,QAC/E7G,KAAKY,SAAS,CAACyH,SAAU,IAAKD,SAAQrH,W,wCAErB8D,GACjB,IAAIgC,EAAQpF,EAAOoD,GACfkE,EAAoB,IAAVlC,EAActH,KAAKuJ,KAAK,GAAG,EACzC9I,KAAKY,SAAS,CAACiG,QAAOkC,c,uCAENlE,M,uCAIAA,GAChB,IAAIT,EAAS6B,EAAYpB,GACzB7E,KAAKY,SAAS,CAACmF,SAAS,KAAKuC,SAASlE,EAAQA,a,yCAE5BS,GAClB,IAAIyD,EAAWrC,EAAYpB,GACvBT,EAASrF,EAAWuJ,EAAU9B,GAClCxG,KAAKY,SAAS,CAACmF,SAAS,IAAIuC,WAAUlE,a,wCAIrBS,GACjB,IAAI1D,EAAQO,EAAOmD,GACfhD,EAAIwD,EAAMlE,EAAOnB,KAAKW,MAAM3B,aAChCgB,KAAKY,SAAS,CAACO,QAAMU,Q,uCAELgD,GAChB,IAAI7F,EAAaiH,EAAYpB,GACzBhD,EAAIwD,EAAMrF,KAAKW,MAAMQ,MAAOnC,GAChCgB,KAAKY,SAAS,CAAC5B,cAAa6C,Q,sCAMZgD,GACX7E,KAAKW,MAAM4H,YAAc1D,GAC7B7E,KAAKY,SAAS,CAAC2H,UAAU1D,IAE1B,IAAI6D,EAAY1I,KAAKW,MAAM+H,UACvBD,EAAqC,QAAxBzI,KAAKW,MAAM4H,UAAqB,CAACrH,EAAOwH,IAAaxH,EAClEsH,EAAoC,WAAzBxI,KAAKW,MAAM4H,UAAyB,CAAC3F,EAAO8F,IAAa9F,EACxE5C,KAAKY,SAAS,CAAC+H,UAAU,OAAQH,WAAUC,gB,sCAQ5B5D,GACf,IAAIa,EAAiC,IAA1BvG,WAAW+B,EAAO2D,IACzB6D,EAAY/C,SAASd,GACzB7E,KAAKY,SAAS,CAAC8E,QAAOgD,gB,yCAGJ7D,GAClB,IAAIa,EAAiC,IAA1BvG,WAAW+B,EAAO2D,IACzB6D,EAAY/C,SAASd,GACzB7E,KAAKY,SAAS,CAAC8E,QAAOgD,gB,2EAgBtBE,QAAQC,IAAI7I,KAAKW,MAAMgI,WAEpB,IAAON,EAAWrI,KAAKW,MAAM0H,SACvBD,EAASpI,KAAKW,MAAMyH,OACpB7C,EAAQvF,KAAKW,MAAMG,QACnB+F,EAAQ7G,KAAKW,MAAMkG,MAClBmC,EAAwB,MAAbX,EAAmBtJ,EAAWqJ,EAAS1B,EAAQnB,EAAMhG,KAAKuJ,KAAKjC,IAAUuB,EACrFa,EAAyB,SAAbZ,EAAsBtJ,EAAWqJ,EAASxB,EAASrB,EAAMhG,KAAKuJ,KAAKjC,IAAUuB,EAI3FrC,EAAW/F,KAAKW,MAAMoF,SACvBuC,EAAWtI,KAAKW,MAAM2H,SACnB7B,EAAsB,OAAbV,EAAoBhH,EAAWuJ,EAAUtC,GAAYsC,EAC9D/B,EAAoB,MAAbR,EAAmBhH,EAAWuJ,EAAU9B,GAAU8B,EAGzDJ,EAAUlI,KAAKW,MAAMuH,QACrBC,EAAQnI,KAAKW,MAAMwH,MACnB9G,EAAiB,QAAZ6G,EAAoBnJ,EAAWoJ,EAAM3C,EAAaD,GAAQ4C,EAC/D/G,EAAkB,OAAZ8G,EAAmBnJ,EAAWoJ,EAAO7C,EAAOC,GAAQ4C,EAI1DtG,EAAI7B,KAAKW,MAAMkB,EACfgE,EAAW7F,KAAKW,MAAMkF,SACtB9E,EAAOf,KAAKW,MAAMI,KAClBC,EAAKhB,KAAKW,MAAMyD,OAChBH,EAA0B,KAAZ8B,EAAkBhH,EAAWiC,EAAIgF,GAAUhF,EAEzDkI,EAA4C,IAAjChI,EAAOlB,KAAKW,MAAM+H,UAAY,GACzCS,EAA6C,IAAjCjI,EAAOlB,KAAKW,MAAM+H,UAAY,GAC7C5C,EAAK9F,KAAKW,MAAM+E,MAShB8C,EAAUxI,KAAKW,MAAM6H,SACrBC,EAAYzI,KAAKW,MAAM8H,UAW7B,OACC,6BACC,kCACC,wDACA,yBAAKpK,UAAY,aAChB,yBAAKA,UAAY,WAChB,kBAAC,EAAD,CACC+B,MAAQ,QACR2E,MAAQvD,EACRsD,SAAY9E,KAAK2H,oBACjBjD,QAAW1E,KAAK4H,sBAGlB,yBAAKvJ,UAAY,WAChB,kBAAC,EAAD,CACC+B,MAAQ,SACR2E,MAAStD,EACTqD,SAAY9E,KAAK6H,kBACjBnD,QAAW1E,KAAK8H,oBAElB,yBAAKzJ,UAAY,WAChB,kBAAC,EAAD,CACA+G,KAAO,KACPD,WAAc9D,EACd4D,cAAiBjF,KAAKkH,kBAEvB,yBAAK7I,UAAY,WAChB,kBAAC,EAAD,CACA+G,KAAO,MACPD,WAAc/D,EACd6D,cAAiBjF,KAAKiH,qBAO1B,kCACC,2DACC,yBAAK5I,UAAY,aAChB,yBAAKA,UAAY,WAEhB,kBAAC,EAAD,CACA+G,KAAO,OACPD,WAAc6D,EACd/D,cAAiBjF,KAAKoH,mBAEvB,yBAAK/I,UAAY,WAChB,kBAAC,EAAD,CACA+G,KAAO,IACPD,WAAc8D,EACdhE,cAAiBjF,KAAKmH,oBAKvB,yBAAK9I,UAAY,WAChB,kBAAC,EAAD,CACC+G,KAAO,KACPD,WAAcoB,EACdtB,cAAiBjF,KAAKqH,oBAExB,yBAAKhJ,UAAY,WAChB,kBAAC,EAAD,CACC+G,KAAO,IACPD,WAAcsB,EACdxB,cAAiBjF,KAAKsH,uBAI3B,kCACC,qDACC,yBAAKjJ,UAAY,aAChB,yBAAKA,UAAY,WAChB,kBAAC,EAAD,CACC+B,MAAQ,SACR2E,MAASrD,EACToD,SAAY9E,KAAKgH,kBACjBtC,QAAW1E,KAAK+H,oBAElB,yBAAK1J,UAAY,WAChB,kBAAC,EAAD,CACC+B,MAAO,MACP2E,MAASyD,EACT1D,SAAY9E,KAAKwH,gBACjB9C,QAAW1E,KAAK0H,mBAGlB,yBAAKrJ,UAAY,WAChB,kBAAC,EAAD,CACC+B,MAAO,SACP2E,MAAS0D,EACT3D,SAAY9E,KAAKyH,mBACjB/C,QAAW1E,KAAK0H,mBAIjB,kBAAC,EAAD,CACAtC,KAAO,OACPD,WAAcnF,KAAKW,MAAM3B,YACzBiG,cAAiBjF,KAAKgI,qBAWzB,kBAAC,EAAD,CACC7G,MAASnB,KAAKW,MAAMQ,MACpBoE,MAASvF,KAAKW,MAAMG,QACpBC,KAAOf,KAAKW,MAAMI,KAClBqD,OAAUpE,KAAKW,MAAMyD,OACrByC,MAAS7G,KAAKW,MAAMkG,MACpB3F,OAAUlB,KAAKW,MAAMO,SAGtB,kBAAC,EAAD,CACCkI,YAAc,wBACd3F,YAAezD,KAAKW,MAAMoF,SAC1B9B,YAAeA,EACfJ,gBAAmB+B,EAAgB/D,EAAGgE,EAAU9E,EAAMwE,EAAOvE,EAAIkI,EAAU,EAAEnD,GAC7EjC,YAAe8B,EAAgB/D,EAAGgE,EAAU9E,EAAMwE,EAAOvE,EAAIkI,EAAU,EAAEnD,GACzEhC,iBAAoB6B,EAAgB/D,EAAGgE,EAAU9E,EAAMwE,EAAOvE,EAAIkI,EAAU,IAAInD,KAGhF,kBAAC,EAAD,CACAqD,YAAc,qBACd3F,YAAgBzD,KAAKW,MAAMoF,SAC3B9B,YAAeA,EACfJ,gBAAmB+B,EAAgB/D,EAAGgE,EAAU9E,EAAMwE,EAAOvE,EAAI8E,EAAI,EAAEC,GACvEjC,YAAe8B,EAAgB/D,EAAGgE,EAAU9E,EAAMwE,EAAOvE,EAAI8E,EAAI,EAAEC,GACnEhC,iBAAoB6B,EAAgB/D,EAAGgE,EAAU9E,EAAMwE,EAAOvE,EAAI8E,EAAI,IAAIC,KAE3E,kBAAC,EAAD,CACCqD,YAAc,uBACd3F,YAAgBzD,KAAKW,MAAMoF,SAC3B9B,YAAeA,EACfJ,gBAAmB+B,EAAgB/D,EAAGgE,EAAU9E,EAAMwE,EAAOvE,EAAImI,EAAW,EAAEpD,GAC9EjC,YAAe8B,EAAgB/D,EAAGgE,EAAU9E,EAAMwE,EAAOvE,EAAImI,EAAW,EAAEpD,GAC1EhC,iBAAoB6B,EAAgB/D,EAAGgE,EAAU9E,EAAMwE,EAAOvE,EAAImI,EAAW,IAAIpD,U,GA3YtDzF,IAAMC,WE/ShC8I,EAAS,CACfC,WAAY,CAEX,CAACC,KAAK,OAAU9E,IAAK,IACpB+E,SAAS,CAAG,CAACC,SAAQ,EAAMC,QAAQC,EAAalF,IAAI,SAEpD,CAAC8E,KAAK,WAAY9E,IAAI,IACrB+E,SAAS,CACR,CAACD,KAAK,OAAQ9E,IAAI,OACjB+E,SAAS,CAAE,CAACC,QAAQ,OAAQG,QAAO,EAAOnF,IAAI,QAE/C,CAAC8E,KAAK,YAAa9E,IAAI,MACtB+E,SAAU,CAAE,CAACC,SAAQ,EAAOhF,IAAI,WAEjC,CAAC8E,KAAK,yBAA0B9E,IAAI,MACnC+E,SAAU,CAAE,CAAEC,SAAQ,EAAMC,QAAQG,EAASpF,IAAI,WAElD,CAAC8E,KAAK,oBAAqB9E,IAAI,MAC9B+E,SAAU,CAAE,CAACC,SAAQ,EAAMhF,IAAI,aAIlC,CAAC8E,KAAK,aAAc9E,IAAI,IACvB+E,SAAS,CACR,CAACD,KAAK,OAAQ9E,IAAI,OACjB+E,SAAS,CAAE,CAACC,QAAQ,OAAQG,QAAO,EAAMnF,IAAI,QAE9C,CAAC8E,KAAK,cAAe9E,IAAI,MACxB+E,SAAU,CAAE,CAAEC,SAAQ,EAAMG,QAAO,EAAOnF,IAAI,WAE/C,CAAC8E,KAAK,WAAY9E,IAAI,MACrB+E,SAAU,CAAE,CAAEC,SAAQ,EAAMhF,IAAI,WAEjC,CAAC8E,KAAK,YAAa9E,IAAI,MACtB+E,SAAU,CACT,CAACD,KAAK,OAAQ9E,IAAI,OACjB+E,SAAS,CAAE,CAACC,QAAQ,OAAQG,QAAO,EAAMnF,IAAI,QAE9C,CAAC8E,KAAK,UAAW9E,IAAI,QACpB+E,SAAU,CAAE,CAAEC,SAAQ,EAAMhF,IAAI,aAEjC,CAAC8E,KAAK,SAAU9E,IAAI,QACpB+E,SAAU,CAAE,CAAEC,SAAQ,EAAMhF,IAAI,iBAMpC,CAAC8E,KAAK,QAAS9E,IAAI,IAClB+E,SAAS,CACR,CAACD,KAAK,OAAQ9E,IAAI,OACjB+E,SAAS,CAAE,CAACC,QAAQ,OAAQG,QAAO,EAAMnF,IAAI,QAE9C,CAAC8E,KAAK,QAAS9E,IAAI,MAClB+E,SAAU,CAAE,CAAEC,SAAQ,EAAMhF,IAAI,WAEjC,CAAC8E,KAAK,QAAS9E,IAAI,MAClB+E,SAAU,CAAE,CAAEC,SAAQ,EAAMhF,IAAI,aAInC,CAAC8E,KAAK,QAAS9E,IAAI,IAClB+E,SAAS,CAAE,CAAEC,SAAQ,EAAMhF,IAAI,WAO5BqF,EAAY,SAACC,GAElB,IADA,IAAIC,EAAY,GACP7F,EAAI,EAAGA,EAAI4F,EAAS3F,OAAQD,IACpC6F,EAAU7F,IAAK,EAEhB,OAAO6F,GAiJOC,E,YA1Hd,WAAYtK,GAAQ,IAAD,8BAClB,4CAAMA,KAKDgB,MAAQ,CACZuJ,UAAW,EAAC,GAAM,GAAO,GAAO,GAAO,GACvCC,aAAc,KACdC,eAAef,EAAQC,WACvBe,QAAQ,GACRC,SAASX,GAEV,EAAKY,iBAAmB,EAAKA,iBAAiBzK,KAAtB,gBAbN,E,8EAgBF+E,GAGhB,IAAIlE,EAAQX,KAAKW,MACb6J,EAAK3F,EAAM3E,OAAOsK,GAClBC,EAAS9J,EAAMwJ,aACfH,EAAYrJ,EAAMuJ,UAClBG,EAAU1J,EAAM0J,QAOhBK,EAAYL,EAAQjG,OACpBuG,EAAUhK,EAAMyJ,eAAeI,GAAIhB,SACnCoB,EAAUjK,EAAMyJ,eAChBS,EAAUR,EAAQK,EAAW,GAIjC,OAAOC,EAAQ,GAAGlB,SACjB,IAAK,OACJY,EAAQS,MACR,IAAIC,EAAmBjB,EAAUe,GACjC7K,KAAKY,SAAS,CACbwJ,eAAeS,EACfX,UAAUa,EACVV,QAAQA,IACL,MAEL,UAAKW,EAEJ,IAAIC,EAAmBnB,EAAUa,GAEjCN,EAAQK,GAAaE,EACrBhC,QAAQC,IAAI+B,GACZ5K,KAAKY,SAAS,CACbwJ,eAAeO,EACfT,UAAUe,EACVZ,QAAQA,EACRX,QAAQ,OACL,MAEL,KAAM,EAIiB/I,EAAMuJ,UAAUO,GAKtC,IALA,IACIf,EAAUiB,EAAQ,GAAGjB,QAIfvF,EAAI,EAAGA,EAAI6F,EAAU5F,OAAQD,IACtC6F,EAAU7F,IAAK,EAEhB6F,EAAUQ,IAAM,EAkBhBxK,KAAKY,SAAS,CACbuJ,aAAcK,EACdF,SAAUZ,O,+BAcb,IAAIwB,EA9HQ,SAACC,EAAcxK,GAC5B,IAAIyK,EAAQzK,EAAMyJ,eAAehH,KAAI,SAACiI,EAAKC,GAAN,OACpC,wBACC5G,QAAWyG,EACX1G,IAAO4G,EAAI5G,IACX+F,GAAMc,EACNjN,WAAwC,IAA3BsC,EAAMuJ,UAAUoB,GAAmB,MAAQ,UACvDD,EAAI9B,SAGP,OACC,yBAAKlL,UAAY,gBACf+M,GAkHmBG,CAAKvL,KAAKuK,iBAAkBvK,KAAKW,OAClD6K,EAAmBxL,KAAKW,MAAM2J,UA7NtB,WAAO,OAAO,+CA+N1B,OACC,6BACC,yBAAKjM,UAAY,mBACf6M,GAEF,6BACC,kBAACM,EAAD,Y,GApHgBlL,IAAMC,WC5HrBkL,G,MAAgB,CACrB,CAAClC,KAAK,MAAOmC,OAAO,CACnB,CAACnC,KAAK,QAASoC,KAAK,QAASC,IAAI,IAAKC,IAAI,OAAQ1L,MAAM,eAAgB2L,MAAM,cAAetB,GAAG,cAAe/F,IAAI,GACnH,CAAC8E,KAAM,MAAOoC,KAAK,QAASC,IAAI,IAAKC,IAAI,MAAO1L,MAAM,eAAiB2L,MAAM,cAAetB,GAAG,YAAa/F,IAAI,GAChH,CAAC8E,KAAM,QAASoC,KAAK,QAASC,IAAI,IAAKC,IAAI,MAAO1L,MAAM,eAAiB2L,MAAM,cAAetB,GAAG,cAAe/F,IAAI,GACpH,CAAC8E,KAAK,OAAQoC,KAAK,QAASC,IAAI,IAAKC,IAAI,MAAO1L,MAAM,eAAiB2L,MAAM,cAAetB,GAAG,aAAc/F,IAAI,KAGlH,CAAC8E,KAAK,MAAOmC,OAAO,CACnB,CAACnC,KAAK,QAASoC,KAAK,QAASC,IAAI,IAAKC,IAAI,IAAK1L,MAAM,eAAgB2L,MAAM,cAAetB,GAAG,cAAe/F,IAAI,GAChH,CAAC8E,KAAK,MAAOoC,KAAK,QAASC,IAAI,IAAKC,IAAI,MAAO1L,MAAM,eAAiB2L,MAAM,cAAetB,GAAG,YAAa/F,IAAI,GAC/G,CAAC8E,KAAK,aAAaoC,KAAK,QAASC,IAAI,IAAKC,IAAI,MAAO1L,MAAM,eAAiB2L,MAAM,cAAetB,GAAG,mBAAoB/F,IAAI,GAC5H,CAAC8E,KAAK,YAAaoC,KAAK,QAASC,IAAI,IAAKC,IAAI,MAAO1L,MAAM,eAAiB2L,MAAM,cAAetB,GAAG,cAAe/F,IAAI,OA6BnHsH,EAAQ,SAACJ,EAAMK,EAAIC,EAAIC,EAAIC,GAEhC,MAAW,OAARR,EACK,CAACS,gBAAgB,QAAD,OAAkBD,EAAlB,MAIf,CAACC,gBAAgB,QAAD,OAAkBD,EAAlB,O,GAKD7L,IAAMC,U,OCtChB8L,EAbF,WAGZ,OACC,kBAAC,IAAD,KACC,yBAAKhO,UAAY,OAChB,kBAAC,EAAD,MACA,kBAACiO,EAAD,SCVJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.90730aff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react.fbf20f51.png\";","import React from 'react';\r\nimport './headerStyles.css';\r\n\r\nconst Header = () => {\r\n\tlet title = \"= (Lorp.React.Project_Gallery) => {...\";\r\n\tlet ReactIcon = require('./images/react.png');\r\n\treturn(\r\n\t\t<div className = 'flexContainer'>\r\n\t\t\t<img alt = \"loading\" className = 'reactIcon' src = {ReactIcon}></img>\r\n\t\t\t<h1 className = 'header'> {title} </h1>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Header;","\r\n//lifting state example => react docs\r\nimport React from 'react';\r\n\r\n/*********************functions and variables*********************/\r\nconst scaleNames = {\r\n  c: 'Celsius',\r\n  f: 'Fahrenheit'\r\n};\r\n\r\nfunction toCelsius(fahrenheit) {\r\n  return (fahrenheit - 32) * 5 / 9;\r\n}\r\n\r\nfunction toFahrenheit(celsius) {\r\n  return (celsius * 9 / 5) + 32;\r\n}\r\n\r\nfunction tryConvert(temperature, convert) {\r\n  const input = parseFloat(temperature);\r\n  if (Number.isNaN(input)) {\r\n    return '';\r\n  }\r\n  const output = convert(input);\r\n  const rounded = Math.round(output * 1000) / 1000;\r\n  return rounded.toString();\r\n}\r\n\r\nfunction BoilingVerdict(props) {\r\n  if (props.celsius >= 100) {\r\n    return <p>The water would boil.</p>;\r\n  }\r\n  return <p>The water would not boil.</p>;\r\n}\r\n/*******************child class boiling*******************/\r\nclass TemperatureInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.props.onTemperatureChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    \r\n    const temperature = this.props.temperature;\r\n    const scale = this.props.scale;\r\n    return (\r\n      <fieldset>\r\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\r\n        <input value={temperature}\r\n               onChange={this.handleChange} />\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n/********************parent class********************/\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\r\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\r\n    this.state = {temperature: '', scale: 'c'};\r\n  }\r\n\r\n  handleCelsiusChange(temperature) {\r\n    this.setState({scale: 'c', temperature});\r\n  }\r\n\r\n  handleFahrenheitChange(temperature) {\r\n    this.setState({scale: 'f', temperature});\r\n  }\r\n\r\n  render() {\r\n    const scale = this.state.scale;\r\n    const temperature = this.state.temperature;\r\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\r\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\r\n\r\n    return (\r\n      <div>\r\n        <TemperatureInput\r\n          scale=\"c\"\r\n          temperature={celsius}\r\n          onTemperatureChange={this.handleCelsiusChange} />\r\n        <TemperatureInput\r\n          scale=\"f\"\r\n          temperature={fahrenheit}\r\n          onTemperatureChange={this.handleFahrenheitChange} />\r\n        <BoilingVerdict\r\n          celsius={parseFloat(celsius)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport  './voltageDropStyles.css';\r\n\r\n\r\n\r\n\r\n\r\n/********************Voltage Drop constants**********************/\r\n/*input variable*/\r\nconst unitType = {\r\n\tvoltage:'Voltage',\r\n\tamps:'Current',\r\n\tft:'Length in ft',\r\n\tm:'Length in Meters',\r\n\tkcmils:'Area',\r\n\tmetal:'Metal',\r\n\tpvd:'% Voltage Drop',\r\n\tvd:'Voltage Drop',\r\n\tp:'Watts',\r\n\ttemp:'Cecius',\r\n\r\n\r\n};\r\n\r\n//pulldown list items\r\nconst voltages = [120, 208, 240, 277, 347, 416, 480, 600];\r\nconst phases = [1, 3];\r\n\r\nconst metals = ['copper', 'aluminum', 'carbon', 'constantan', 'gold', 'iron', 'lead', 'manganin', 'mercury', 'nichrome', 'nickle', 'platinum', 'silver', 'tungsten']\r\nconst kValues = {copper:{k:10.4, tempCo:0.0039}, \r\n\t\t\t\t\t\t  aluminum:{k:17, tempCo:0.004},\r\n\t\t\t\t\t\t  carbon:{k:22000, tempCo:-0.0004}, \r\n\t\t\t\t\t\t  constantan:{k:295, tempCo:0.000002},\r\n\t\t\t\t\t\t  gold:{k:14, tempCo:0.004}, \r\n\t\t\t\t\t\t  iron:{k:60, tempCo:0.0055},\r\n\t\t\t\t\t\t  lead:{k:126, tempCo:0.0043}, \r\n\t\t\t\t\t\t  manganin:{k:265, tempCo:0},\r\n\t\t\t\t\t\t  mercury:{k:675, tempCo:0.00088}, \r\n\t\t\t\t\t\t  nichrome:{k:675, tempCo:0.0002},\r\n\t\t\t\t\t\t  nickle:{k:52, tempCo:0.005}, \r\n\t\t\t\t\t\t  platinum:{k:66, tempCo:0.0036},\r\n\t\t\t\t\t\t  silver:{k:9.6, tempCo:0.0038}, \r\n\t\t\t\t\t\t  tungsten:{k:33.8, tempCo:0.005}\r\n\t\t\t\t\t\t  }//mil-foot\r\n\r\n\r\n//CEC given standard wire sizes for pulldown\r\nconst gauges = ['Select ','18','16','14',\r\n\t\t\t\t\t\t   '12','10','8',\r\n\t\t\t\t\t\t   '6','4','3',\r\n\t\t\t\t\t\t   '2','1','0',\r\n\t\t\t\t\t\t   '00','000','0000',]\r\nconst kcmils = ['Select','1.624','2.583','4.107',\r\n\t\t\t\t\t\t'6.530','10.383','16.509',\r\n\t\t\t\t\t\t'26.251','41.740','52.633',\r\n\t\t\t\t\t\t'66.369','83.690','105.531',\r\n\t\t\t\t\t\t'133.072','167.800','211.592',\r\n\t\t\t\t\t\t'250','300','350',\r\n\t\t\t\t\t\t'400','500','600',\r\n\t\t\t\t\t\t'700','750','800',\r\n\t\t\t\t\t\t'900','1000','1250',\r\n\t\t\t\t\t\t'1500','1750','2000']\r\n\r\n\r\n/**************voltage drop graphical display*********************************/\r\nconst makePercent = (item, outOf)  =>{ \r\n\treturn String(Math.round(100*item/outOf)) + '%'\r\n}\r\n\r\nconst barList = (props) => {\r\n\tlet lengths = [props.overRatedLength, props.ratedLength, props.underRatedLength, -1];\r\n\tlet classNames = ['overRated','rated', 'underRated', 'noVoltage'];\r\n\tlet totalLength = props.totalLength ? props.totalLength: 100;\r\n\tvar barlist = []\r\n\tvar usedUp = 0;\r\n\tvar percent;\r\n\tfor (var i = 0; i < lengths.length; i++){\r\n\t\tlet length = lengths[i] <= 0 ? 'No Voltage':lengths[i];\r\n\t\tlet last = i > 0 ? lengths[i-1]: 0 \r\n\t\tlet sectionLength = length - last;\r\n\t\tif ((sectionLength + usedUp) < totalLength){\r\n\t\t\tusedUp += sectionLength;\r\n\t\t\tpercent = makePercent(sectionLength, totalLength);\r\n\t\t\tbarlist[i] = {className:classNames[i], percent:percent, length:length}\r\n\t\t} else  if (totalLength > usedUp) { \r\n\t\t\tsectionLength = totalLength - usedUp\r\n\t\t\tusedUp = totalLength\r\n\t\t\tpercent = makePercent(sectionLength, totalLength)\r\n\t\t\tbarlist[i] = {className:classNames[i], percent:percent, length:length}\r\n\t\t} else if (usedUp  >=  totalLength  ){break;}\r\n\t\t\r\n\t}\r\n\treturn barlist\r\n}\r\n\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\r\n/*\r\n\t let  l1= props.overRatedLength;\r\n\t let  l2 = props.ratedLength;\r\n\t let l3 = props.underRatedLength;\r\n\tlet lT = props.totalLength*2\r\n\tlet LengthToZeroV = l3\r\n\r\n\tlet p1 = makePercent(l1, lT);\r\n\tlet p2= makePercent((l2 - l1), lT);\r\n\tlet p3 = makePercent((l3 -l2), lT);\r\n\r\n\r\n\r\n return[{ className: 'overRated', percent:p1, length:l1},\r\n \t\t\t  {className: 'rated', percent:p2, length:l2},\r\n \t\t\t  {className: 'underRated', percent:p3, length:l3}]}\r\n\r\n*/\r\n\r\nconst LimitBarEl = (props) => {\r\n\tlet lengthScale = props['lengthScale']\r\n\tlet limitMap = props.barList.map((bar) =>\r\n\t\t<div  \r\n\t\tclassName = {bar['className']}\r\n\t\tstyle = {{width: `${bar['percent']}`}}> \r\n\t\t{bar['length']} {props['lengthScale']}\r\n\t\t</div>\r\n\t\t)\r\n\t\treturn (\r\n\t\t\t<div className = 'distanceMeter'>\r\n\t\t\t\t{limitMap}\r\n\t\t\t</div>\t\t\r\n\t\t)}\t\r\n\r\n\r\nclass Result extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\thandleChange(){}\r\n\r\n\r\n\trender(){ \r\n\t\tconst lengthScale = this.props.lengthScale;\r\n\t\t/*const input = {\r\n\t\t\tlength:[\r\n\t\t\t\tthis.props.overRatedLength,\r\n\t\t\t\tthis.props.ratedLength,\r\n\t\t\t\tthis.props.underRatedLength,\r\n\t\t\t\tthis.props.noVoltageLength],\r\n\t\t\tlengthScale:this.props.lengthScale\r\n\t\t}*/\r\n\r\n\t\tvar barlist = barList(this.props)\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<legend>this.props.legendTitle}</legend>\r\n\t\t\t\t<LimitBarEl\r\n\t\t\t\t\tbarList = {barlist}\r\n\t\t\t\t\tlengthScale = {lengthScale}/>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\n/*************Pulldown Menues: kcmils child class of Voltage Drop *********************/\r\n/*********pulldown functions***********************/\r\n/*pull down list insert function*/\r\n\r\nconst MenuList = (props) => {\r\n\tlet amps = 0;\r\n\tlet listItem = props.list.map((item)=>\r\n\t\t<option key = {amps} value = {amps++}> {item} </option>\r\n\t\t);\r\n\treturn (\r\n\t\t<select\r\n\t\t\t\tonChange = {props.onChange}\r\n\t\t\t\tonClick = {props.onClick}>\r\n\t\t\t\t{listItem}\r\n\t\t</select>\r\n\t\t);\r\n}\r\n\r\n/*************classs******************************/\r\nclass Select extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t\r\n\t}\r\n\r\n\thandleChange(event){\r\n\t\tthis.props.onSelect(event.target.value);\r\n\t}\r\n\thandleClick(){\r\n\t\tthis.props.onClick(this.props.scale)\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst scale = this.props.scale\r\n\t\tconst items = this.props.items\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<MenuList  \r\n\t\t\t\tlist = {items}\r\n\t\t\t\tonChange = {this.handleChange}\r\n\t\t\t\tonClick = {this.handleClick}\r\n\t\t\t/>{scale}\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\n/********************Field input:  kcmils child of Volscalee Drop****************************/\r\n/********input feild functions*****************/\r\n\r\n/********class******************************/\r\nclass Input extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\thandleChange(event){\r\n\t\t//an attempt to serialize the event within child\r\n\t\t/*this.props.onValueChange([voltage.target.value, this.props.unit]);*/\r\n\r\n    \tthis.props.onValueChange(event.target.value);\r\n \r\n\t\t//this.props.onValueChange(event.target.value);\r\n\r\n\r\n\t};\r\n\r\n\trender(){\r\n\t\tconst fieldValue = this.props.inputValue\r\n\t\tconst unit = this.props.unit;\r\n\t\treturn (\r\n\t\t\t<fieldset >\r\n\t\t\t\t<legend> Enter { unitType[unit] } </legend>\r\n\t\t\t\t<div >\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue = {fieldValue}\r\n\t\t\t\t\t\tonChange = {this.handleChange} />\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t</fieldset>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/********************Voltage Drop: root class***************************************/\r\n/***********Voltage Drop functions************/\r\n\r\n/*rough draft. to do => rearange algibracly with stae machine**/\r\n\r\nconst kCalc = (metal, temp) => {\r\n\tlet kValue = kValues[metal]['k'];\r\n\tlet tempCo = kValues[metal]['tempCo'];\r\n\tlet output = kValue*(1 + (tempCo*(temp - 20)))\r\n\treturn   Math.round(output * 1000) / 1000\r\n}\r\n\r\nconst toPVD = (volts, vd) => {return vd/volts}\r\nconst toVDfromPVD =(volts, pvd) => {return volts*(pvd/100)}\r\n\r\nconst toKcmils = (k,  length, amps, multiple) =>{}\r\nconst toLength = (k, kcmils, amps, multiple) => {}\r\nconst vdCalc = (k, kcmils, amps, length, mutiple,) => {}\r\n\r\nconst VoltageDropCalc = (props) => {\r\n\r\n\tlet k = kValues[props.metal];\r\n\tlet cmils = parseInt(props.kcmils)*1000;\r\n\tlet vd = (2*k*props.amps*props.length)/cmils\r\n\tlet pvd = 100*vd/ props.volts\r\n\t\r\n\r\n\r\n\treturn <p> The voltage drop  is {vd}Volts, making it a {pvd}persent voltage drop</p>;\r\n}\r\n\r\nconst toLengthFromPVD = (k, multiple, amps, volts, ft, cm, pvd, disScale)  => {\r\n\tlet vd = (pvd*volts)/100\r\n\tlet length =  (vd*cm)/(k*multiple *amps)\r\n\tlength = Number.isNaN(length) ? length = 0: length;\r\n\tlength = disScale === 'm' ? tryConvert(length, toMeters): length;\r\n\r\n\treturn  Math.round(length*100)/100;\r\n}\r\n\r\n\r\nconst isNumberKey = (number) => {\r\n\tlet str = number;\r\n\tif ( str.charAt(str.length -1) === '.'  &&  !(str.indexOf('.') < str.length-1)) { return str} \r\n\telse {\r\n\t\tconst input = parseFloat(number);\r\n\t\tif(Number.isNaN(input)){return ' '}\r\n\t\telse {return input}\t\r\n\t\t}\r\n}\r\n\r\n// general convertion\r\nconst tryConvert = (measure, convert, volts) => {\r\n\tconst input = parseFloat(measure);\r\n\tif(Number.isNaN(input)){\r\n\t\treturn ' '\r\n\t\t} else {\r\n\tconst output = convert(input, volts);\r\n\treturn Math.round(output * 1000) / 1000;\r\n\t\t}\r\n}\r\n\r\n\r\n\r\n//starting '0's\r\n\r\n//distance convertions\r\nconst toMeters = (feet) => { return feet / 3.281};\r\nconst toFeet = (meters)=> { return meters * 3.281};\r\n\r\n//power/amps  convertions\r\nconst toAmps = (watts, volts) => {return watts/volts}\r\nconst toWatts = (amps, volts, phase) => {return amps*volts}\r\n\t\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n/************parent class ********************/\r\nclass voltageDropInputs extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t//field\r\n\t\t\r\n\t\t\r\n\t\tthis.handleLChange = this.handleLChange.bind(this);\r\n\t\tthis.handleMetalChange = this.handleMetalChange.bind(this);\r\n\t\tthis.handlePVDChange = this.handlePVDChange.bind(this);\r\n\t\t\t//power\r\n\t\tthis.handleVDChange = this.handleVDChange.bind(this);\r\n\t\tthis.handleWattChange = this.handleWattChange.bind(this);\r\n\t\tthis.handleAmpChange = this.handleAmpChange.bind(this);\r\n\t\t\t//distances\r\n\t\tthis.handleFootChange = this.handleFootChange.bind(this);\r\n\t\tthis.handleMeterChange = this.handleMeterChanged.bind(this);\r\n\t\t//select\r\n\t\tthis.handleAWGChange = this.handleAWGChange.bind(this);\r\n\t\tthis.handlekcmilsChange = this.handlekcmilsChange.bind(this);\r\n\t\tthis.handleWireClick = this.handleWireClick.bind(this);\r\n\t\tthis.handleVoltageChange = this.handleVoltageChange.bind(this);\r\n\t\tthis.handleVoltageClick = this.handleVoltageClick.bind(this);\r\n\t\tthis.handlePhaseChange = this.handlePhaseChange.bind(this);\r\n\t\tthis.handlePhaseClick = this.handlePhaseClick.bind(this);\r\n\t\t//wire properties\r\n\t\tthis.handleMetalChange = this.handleMetalChange.bind(this);\r\n\t\tthis.handleMetalClick = this.handleMetalClick.bind(this);\r\n\t\tthis.handleTempChange = this.handleTempChange.bind(this);\r\n\r\n\r\n\t\tthis.state = {\r\n\t\t\ttemperature:20,\r\n\t\t\tk:10.4,\r\n\t\t\tmultiple:2,\r\n\r\n\t\t\t\r\n\t\t\tlm: ' ', //length meters\r\n\t\t\tmetal:'copper', //Metal\r\n\r\n\r\n\t\t\t//votage drop representation\r\n\t\t\tvdScale:'',\r\n\t\t\tvd:0, //votage drop\r\n\t\t\tvdMag:0,\r\n\r\n\t\t\t//power\r\n\t\t\tvoltage: 120, //volts\r\n\t\t\tamps:0, //current\r\n\t\t\tpowMag: 0,\r\n\t\t\tpowScale: '',\r\n\t\t\tphase:1,\r\n\r\n\r\n\t\t\t//distance \r\n\t\t\tdistance: 0,\r\n\t\t\tdisScale: ' ',\r\n\t\t\tlength: 0, //length ft for calc\r\n\r\n\r\n\t\t\t//wire sizes\r\n\t\t\twireScale:' ', //AWG or mils\r\n\t\t\tAWGState:gauges, // alt states input /output lists\r\n\t\t\tmilsState: kcmils,\r\n\t\t\twireIndex:0,  //Position in paralel wire size lists\r\n\t\t\tcmils:0,\r\n\r\n\t\t\tcalcScale:''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconsole.log('mounted')\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log('unmount');\r\n\t }\r\n\r\n\t/*an attempt to work with one change handler\r\n\thandleChange(voltage){\r\n\t\tconst value = voltage[0];\r\n\t\tconst unit = voltage[1];\r\n\t\tthis.setState({unit:value});\r\n\t\tconsole.log(value)\r\n\t\tconsole.log(unit)\r\n\r\n\t}*/\r\n\r\n\t//***fields***\r\n\r\n\r\n\thandleLChange(event){\r\n\t\tthis.setState({length:event});\r\n\t}\r\n\r\n\t//Votages\r\n\thandleVoltageChange(event){\r\n\t\tlet voltage = voltages[event]\r\n\t\tthis.setState({voltage});\r\n\t}\r\n\thandleVoltageClick(event){}\r\n\r\n\r\n\thandleVDChange(event){\r\n\t\tlet vd = isNumberKey(event)\r\n\t\tthis.setState({calcScale: 'vd', vdScale:'vd', vdMag:vd, vd});\r\n\t}\r\n\t\r\n\thandlePVDChange(event){\r\n\t\tlet vdMag = isNumberKey(event);\r\n\t\tlet vd = tryConvert(vdMag, toVDfromPVD, this.state.voltage)\r\n\t\tthis.setState({calcScale:'vd', vdScale: 'pvd', vdMag, vd})\r\n\t};\r\n\r\n\r\n\t//installation\r\n\t\t\t//power\r\n\thandleAmpChange(event){/////////////////////////////////////////////////////////////////\r\n\t\tlet amps = isNumberKey(event);\r\n\t\tthis.setState({powScale:'amps', powMag:amps,  amps});\r\n\t}\r\n\thandleWattChange(event){\r\n\t\tlet powMag = isNumberKey(event);\r\n\t\tlet amps = tryConvert(powMag , toAmps, this.state.voltage*Math.sqrt(this.state.phase) ); \r\n\t\tthis.setState({powScale: 'p', powMag, amps })\r\n\t}\r\n\thandlePhaseChange(event){\r\n\t\tlet phase = phases[event]\r\n\t\tlet mutiple = phase === 3 ? Math.sqrt(3):2;\r\n\t\tthis.setState({phase, mutiple})\r\n\t}\t\r\n\thandlePhaseClick(event){}\r\n\r\n\r\n\t\t\t//distance\r\n\thandleFootChange(event){\r\n\t\tlet length = isNumberKey(event);\r\n\t\tthis.setState({disScale:'ft',distance:length, length});\r\n\t};\r\n\thandleMeterChanged(event){\r\n\t\tlet distance = isNumberKey(event);\r\n\t\tlet length = tryConvert(distance, toFeet);\r\n\t\tthis.setState({disScale:'m',distance, length });\r\n\t};\r\n\r\n\t//Wire Properties\r\n\thandleMetalChange(event){\r\n\t\tlet metal = metals[event]\r\n\t\tlet k = kCalc(metal, this.state.temperature)\r\n\t\tthis.setState({metal,k});\r\n\t}\r\n\thandleTempChange(event){\t\r\n\t\tlet temperature= isNumberKey(event);\r\n\t\tlet k = kCalc(this.state.metal, temperature)\t\r\n\t\tthis.setState({temperature, k})\r\n\t}\r\n\r\n\r\n\r\n\t//***selects***\r\n\t handleWireClick(event){\t\r\n\t \tif (this.state.wireScale !== event){\r\n\t\t\tthis.setState({wireScale:event});\r\n\t\t\t} \r\n\t\tlet wireIndex = this.state.wireIndex\r\n\t\tlet milsState =  this.state.wireScale ==='AWG' ? [kcmils[wireIndex]]: kcmils;\r\n\t\tlet AWGState = this.state.wireScale === 'kcmils' ? [gauges[wireIndex]]: gauges\r\n\t\tthis.setState({calcScale:'mils', AWGState, milsState});\r\n\r\n\t\t\r\n\r\n\t}\r\n\t\r\n\r\n\r\n\thandleAWGChange(event){\r\n\t\tlet cmils= parseFloat(kcmils[event])*1000;\r\n\t\tlet wireIndex = parseInt(event)\r\n\t\tthis.setState({cmils, wireIndex});\r\n\t}\r\n\r\n\thandlekcmilsChange(event){\r\n\t\tlet cmils= parseFloat(kcmils[event])*1000;\r\n\t\tlet wireIndex = parseInt(event)\r\n\t\tthis.setState({cmils, wireIndex});\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\thandleMetalClick(){}\r\n\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\t\tconsole.log(this.state.calcScale)\r\n    \t//power field\r\n    \tconst  powScale = this.state.powScale;\r\n    \tconst powMag = this.state.powMag;\r\n    \tconst volts = this.state.voltage;\r\n    \tconst phase = this.state.phase;\r\n     \tconst ampInput = powScale === 'p' ? tryConvert(powMag , toAmps, volts*Math.sqrt(phase) ): powMag;\r\n    \tconst wattInput = powScale === 'amps' ? tryConvert(powMag , toWatts, volts*Math.sqrt(phase)) : powMag;  \t\r\n\r\n\r\n\t\t//distance field\r\n\t\tconst  disScale = this.state.disScale;\r\n\t\tconst distance = this.state.distance;\r\n   \t\tconst meters = disScale === 'ft' ? tryConvert(distance, toMeters ): distance;\r\n    \tconst feet = disScale === 'm' ? tryConvert(distance, toFeet) : distance;\r\n\r\n    \t//voltage drop feilds\r\n    \tconst vdScale = this.state.vdScale;\r\n    \tconst vdMag = this.state.vdMag;\r\n    \tconst vd = vdScale === 'pvd' ? tryConvert(vdMag,toVDfromPVD, volts): vdMag;\r\n    \tconst pvd = vdScale === 'vd' ? tryConvert(vdMag, toPVD, volts): vdMag;\r\n\r\n    \t//wire range bars\r\n\r\n    \tconst k = this.state.k;\r\n    \tconst multiple = this.state.multiple;\r\n    \tconst amps = this.state.amps;\r\n    \tconst ft = this.state.length;\r\n    \tconst totalLength = disScale == 'm' ? tryConvert(ft, toMeters):ft;\r\n    \t//const statePack{k:k, multiple:multiple, amps:amps, volts:volts,  cmils:cm, length:ft}\r\n    \tconst biggerCM = kcmils[this.state.wireIndex + 1]*1000;\r\n    \tconst smallerCM = kcmils[this.state.wireIndex - 1]*1000;\r\n\t\tconst cm = this.state.cmils\r\n\r\n\r\n    \t // const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\r\n   // const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\r\n\t\t//formula variables\r\n\r\n\r\n\t\t//wire size select\r\n\t\tconst AWGState =this.state.AWGState;\r\n\t\tconst milsState = this.state.milsState;\r\n\r\n\r\n\r\n\t\r\n\t\r\n\t\t//var stateGauge = this.state.wireScale === 'kcmils' ? [gauges[wireIndex]]: gauges\r\n\t\t//var stateKcmil = this.state.wireScale ==='AWG' ? [kcmils[wireIndex]]: kcmils\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\treturn(\r\n\t\t\t<div> \r\n\t\t\t\t<fieldset >\r\n\t\t\t\t\t<legend> Voltage Properties </legend>\r\n\t\t\t\t\t<div className = 'fieldFlex'>\r\n\t\t\t\t\t\t<div className = 'flexBox'>\r\n\t\t\t\t\t\t\t<Select \r\n\t\t\t\t\t\t\t\tscale = 'Volts'\r\n\t\t\t\t\t\t\t\titems= {voltages}\r\n\t\t\t\t\t\t\t\tonSelect = {this.handleVoltageChange}\r\n\t\t\t\t\t\t\t\tonClick = {this.handleVoltageClick}/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className = 'flexBox'>\t\t\r\n\t\t\t\t\t\t\t<Select \r\n\t\t\t\t\t\t\t\tscale = 'Phases'\r\n\t\t\t\t\t\t\t\titems = {phases}\r\n\t\t\t\t\t\t\t\tonSelect = {this.handlePhaseChange}\r\n\t\t\t\t\t\t\t\tonClick = {this.handlePhaseClick}/>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'flexBox'>\t\t\r\n\t\t\t\t\t\t\t<Input \r\n\t\t\t\t\t\t\tunit = \"vd\"\r\n\t\t\t\t\t\t\tinputValue = {vd}\r\n\t\t\t\t\t\t\tonValueChange = {this.handleVDChange}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'flexBox'>\t\t\r\n\t\t\t\t\t\t\t<Input \r\n\t\t\t\t\t\t\tunit = \"pvd\"\r\n\t\t\t\t\t\t\tinputValue = {pvd}\r\n\t\t\t\t\t\t\tonValueChange = {this.handlePVDChange}/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</fieldset>\r\n\t\t\t<fieldset >\r\n\t\t\t\t<legend> Instulation properties</legend>\r\n\t\t\t\t\t<div className = 'fieldFlex'>\r\n\t\t\t\t\t\t<div className = 'flexBox'>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tunit = \"amps\" \r\n\t\t\t\t\t\t\tinputValue = {ampInput}\r\n\t\t\t\t\t\t\tonValueChange = {this.handleAmpChange}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'flexBox'>\r\n\t\t\t\t\t\t\t<Input \r\n\t\t\t\t\t\t\tunit = \"p\"\r\n\t\t\t\t\t\t\tinputValue = {wattInput}\r\n\t\t\t\t\t\t\tonValueChange = {this.handleWattChange}/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'flexBox'>\r\n\t\t\t\t\t\t\t<Input \r\n\t\t\t\t\t\t\t\tunit = \"ft\"\r\n\t\t\t\t\t\t\t\tinputValue = {feet}\r\n\t\t\t\t\t\t\t\tonValueChange = {this.handleFootChange}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'flexBox'>\r\n\t\t\t\t\t\t\t<Input \r\n\t\t\t\t\t\t\t\tunit = \"m\"\r\n\t\t\t\t\t\t\t\tinputValue = {meters}\r\n\t\t\t\t\t\t\t\tonValueChange = {this.handleMeterChange}/>\r\n\t\t\t\t\t\t</div>\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t</fieldset>\r\n\t\t\t<fieldset >\r\n\t\t\t\t<legend> Wire Properties </legend>\r\n\t\t\t\t\t<div className = 'fieldFlex'>\r\n\t\t\t\t\t\t<div className = 'flexBox'>\r\n\t\t\t\t\t\t\t<Select \r\n\t\t\t\t\t\t\t\tscale = 'Metals'\r\n\t\t\t\t\t\t\t\titems = {metals}\r\n\t\t\t\t\t\t\t\tonSelect = {this.handleMetalChange}\r\n\t\t\t\t\t\t\t\tonClick = {this.handleMetalClick}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'flexBox'>\r\n\t\t\t\t\t\t\t<Select  \r\n\t\t\t\t\t\t\t\tscale= 'AWG'\r\n\t\t\t\t\t\t\t\titems = {AWGState}\r\n\t\t\t\t\t\t\t\tonSelect = {this.handleAWGChange}\r\n\t\t\t\t\t\t\t\tonClick = {this.handleWireClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'flexBox'>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tscale= 'kcmils'\r\n\t\t\t\t\t\t\t\titems = {milsState}\r\n\t\t\t\t\t\t\t\tonSelect = {this.handlekcmilsChange}\r\n\t\t\t\t\t\t\t\tonClick = {this.handleWireClick} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Input \r\n\t\t\t\t\t\t\tunit = \"temp\"\r\n\t\t\t\t\t\t\tinputValue = {this.state.temperature}\r\n\t\t\t\t\t\t\tonValueChange = {this.handleTempChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t</fieldset>\r\n\r\n\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t<VoltageDropCalc\r\n\t\t\t\t\tmetal = {this.state.metal}\r\n\t\t\t\t\tvolts = {this.state.voltage}\r\n\t\t\t\t\tamps= {this.state.amps}\r\n\t\t\t\t\tlength = {this.state.length}\r\n\t\t\t\t\tphase = {this.state.phase}\r\n\t\t\t\t\tkcmils = {this.state.kcmils}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Result\r\n\t\t\t\t\tlegendTitle = 'One wire size smaller'\r\n\t\t\t\t\tlengthScale = {this.state.disScale}\r\n\t\t\t\t\ttotalLength = {totalLength}\r\n\t\t\t\t\toverRatedLength = {toLengthFromPVD(k, multiple, amps, volts, ft, biggerCM, 1,disScale)}\r\n\t\t\t\t\tratedLength = {toLengthFromPVD(k, multiple, amps, volts, ft, biggerCM, 5,disScale)}\r\n\t\t\t\t\tunderRatedLength = {toLengthFromPVD(k, multiple, amps, volts, ft, biggerCM, 100,disScale)}\r\n\t\t\t\t\t/> \r\n\r\n\t\t\t\t\t<Result\r\n\t\t\t\t\tlegendTitle = 'Selected wire size'\r\n\t\t\t\t\tlengthScale =  {this.state.disScale}\r\n\t\t\t\t\ttotalLength = {totalLength}\r\n\t\t\t\t\toverRatedLength = {toLengthFromPVD(k, multiple, amps, volts, ft, cm, 1,disScale)}\r\n\t\t\t\t\tratedLength = {toLengthFromPVD(k, multiple, amps, volts, ft, cm, 5,disScale)}\r\n\t\t\t\t\tunderRatedLength = {toLengthFromPVD(k, multiple, amps, volts, ft, cm, 100,disScale)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<Result\r\n\t\t\t\t\tlegendTitle = 'One wire size larger'\r\n\t\t\t\t\tlengthScale =  {this.state.disScale}\r\n\t\t\t\t\ttotalLength = {totalLength}\r\n\t\t\t\t\toverRatedLength = {toLengthFromPVD(k, multiple, amps, volts, ft, smallerCM, 1,disScale)}\r\n\t\t\t\t\tratedLength = {toLengthFromPVD(k, multiple, amps, volts, ft, smallerCM, 5,disScale)}\r\n\t\t\t\t\tunderRatedLength = {toLengthFromPVD(k, multiple, amps, volts, ft, smallerCM, 100,disScale)}\r\n\t\t\t\t\t/> \r\n\r\n\r\n\t</div>\r\n\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default voltageDropInputs ;","import React from 'react';\r\nimport  './grid.css';\r\n\r\n\r\nconst Devices = () => {\r\n\treturn( <div className = 'device'> device</div> )\r\n}\r\n\r\n\r\n\r\n\r\nclass Grid extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {something:null};\r\n\r\n\t\tthis.dag = this.drag.bind(this);\r\n\t\tthis.drop = this.drop.bind(this);\r\n\t\tthis.select = this.select.bind(this);\r\n\r\n\t}//con\r\n\r\n\tdrag(event){\r\n\r\n\t\t//todo pick up item from catalog\r\n\r\n\t}\r\n\tdrop(event){\r\n\r\n\t}\r\n\tselect(event){\r\n\r\n\t}\r\n\r\n\t//todo click event will grab and drop items, select items for options\r\n\r\n\r\n\r\n\trender(){\r\n\t\tlet device = Devices()\r\n\r\n\t\treturn(\r\n\t\t\t<div className = 'displayLayout'>\r\n\t\t\t\t<div className = 'gridHeader'>Some Heading</div>\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName = 'body'\r\n\t\t\t\t\tonMouseDown = {this.drag}\r\n\t\t\t\t\tonMouseDown = {this.drop} \r\n\t\t\t\t\tonDblClick = {this.select}> \r\n\r\n\t\t\t\t\t<div className = 'itemsCatalogue'>\r\n\t\t\t\t\t\t{device}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'feild-flex-container'>\r\n\t\t\t\t\t\t<div className = 'distribution'>building Type, item2, item3, item4</div>\r\n\t\t\t\t\t\t<div className = 'gridBox'> place items here</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<div className = 'selection'> selected item options</div>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}//render\r\n}//class\r\n\r\nexport default Grid;","import React from 'react';\r\nimport  './tabStyles.css';\r\nimport ConCalc from '../../exercises/IsBoiling.js';\r\nimport Home from '../home/Home.js';\r\nimport Grid from '../CECAssist/Grid';\r\nimport VoltageDrop from '../voltageDropCal/voltageDrop.js';\r\n\r\n\r\nconst ConCalc1= ConCalc;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// tests to see if a page in passed\r\nconst xmlTest = (prop) => {\r\n\tconst fail = () => {return <div> Page Missing</div>}\r\n\tif(!prop) {return fail}\r\n\telse\t{return prop;}\r\n\t\r\n}\r\n\r\n\t\r\n// const App = () => <div>Hello</div>;\r\n\r\n\r\n//{Tab family tree : [\r\n\t// ansestor's [list of {objects, , , parents:[object list {,,,children's:[object list] } ] },  ,  , ] ,,] } \r\n\t//loop into until it hits a terminating child on their family tree, then run some command.\r\n\t//.display true terminate and does some action\r\n\t//Back on every first child's .display makes a back button\r\n\r\n\r\nconst navObjs ={ \r\nheaderTabs: [\r\n\r\n\t{name:'Home',   key: '0', \r\n\t\tchildren:[  {display:true, feature:VoltageDrop, key:'0.1'}]\r\n\t}, \r\n \t{name:'Web Apps', key:'1', \r\n \t\tchildren:[ \r\n \t\t\t{name:\"Back\", key:\"Back\",\r\n \t\t\t\tchildren:[ {display:\"Back\", action:true,  key:'up'} ]\r\n \t\t\t},\r\n \t\t\t{name:'CEC Asist', key:'1.1',\r\n \t\t\t\tchildren: [ {display:true,  key:'1.1.2'} ]\r\n \t\t\t},\r\n \t\t\t{name:'Convertion Calculators', key:'1.2',\r\n \t\t\t\tchildren: [ { display:true, feature:ConCalc, key:'1.2.1'  }  ]\r\n \t\t\t},\r\n \t\t\t{name:'Fractal Generator', key:'1.3',\r\n \t\t\t\tchildren: [ {display:true, key:'1.3.1'  }  ]\r\n \t\t\t},\r\n \t\t]\r\n \t},\r\n \t{name:'CSS Styles', key:'2', \r\n \t\tchildren:[\r\n \t\t\t{name:\"Back\", key:\"Back\",\r\n \t\t\t\tchildren:[ {display:\"Back\", action:true, key:'up'} ]\r\n \t\t\t},\t\t \r\n \t\t\t{name:'Calculators', key:'2.1',\r\n \t\t\t\tchildren: [ { display:true, action:true,  key:'2.1.1' } ]\r\n\t\t\t},\r\n \t\t\t{name:'Examples', key:'2.2',\r\n \t\t\t\tchildren: [ { display:true, key:'2.2.1'} ]\r\n\t\t\t},\t\t\t\r\n \t\t\t{name:'Animation', key:'2.3',\r\n \t\t\t\tchildren: [\r\n \t\t\t\t\t{name:\"Back\", key:\"Back\",\r\n \t\t\t\t\t\tchildren:[ {display:\"Back\", action:true, key:'up'} ]\r\n \t\t\t\t\t},\r\n\t\t \t\t\t{name:'Group 1', key:'2.3.1',\r\n\t\t \t\t\t\tchildren: [ { display:true, key:'2.3.1.1'  } ] \r\n\t\t \t\t\t},\r\n\t\t \t\t\t{name:'Group2', key:'2.3.2',\r\n\t \t\t\t\tchildren: [ { display:true, key:'2.3.1.2'  } ] \r\n\t \t\t\t\t}, \t\t\t\t\t\r\n \t\t\t\t]\r\n\t\t\t},\t\t\t\t\t\r\n \t\t]\r\n \t},\r\n \t{name:'Games', key:'3', \r\n \t\tchildren:[\r\n \t\t\t{name:\"Back\", key:\"Back\",\r\n \t\t\t\tchildren:[ {display:\"Back\", action:true, key:'up'} ]\r\n \t\t\t},\r\n \t\t\t{name:'Game1', key:'3.1',\r\n \t\t\t\tchildren: [ { display:true, key:'3.1.1'  } ] \r\n \t\t\t},\r\n \t\t\t{name:'Game2', key:'3.2',\r\n \t\t\t\tchildren: [ { display:true, key:'3.1.2'  } ] \r\n \t\t\t},\t\r\n\t\t]\r\n \t},\r\n \t{name:'About', key:'4', \r\n \t\tchildren:[ { display:true, key:'4.1'  } ]\r\n \t}]\r\n }\r\n\r\n\r\n/******************Dynamic Tab Setup Functions**************/\r\n/***Truth list for nav bar select toggle***/\r\nconst TruthList = (tabsList) => {\r\n\tlet truthList = []\r\n\tfor (var i = 0; i < tabsList.length; i++){\r\n\t\ttruthList[i] = false\r\n\t}\r\n\treturn truthList;\r\n}\r\n/***maps the generation and produced an xml display output  ***/\r\nconst  Tabs = (clickHandler, state) => {\r\n\tlet tabEls =state.activeSiblings.map((tab, index) => \r\n\t\t<h3  \r\n\t\t\tonClick = {clickHandler} \r\n\t\t\tkey = {tab.key} \r\n\t\t\tid = {index} \r\n\t\t\tclassName = {state.selectMap[index] === false ? 'tab' : 'active'}>\r\n\t\t\t{tab.name}  \r\n\t\t</h3>\r\n\t);\t\r\n\treturn (\r\n\t\t<div className = 'tabContainer'> \r\n\t\t\t{tabEls}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n/**************************class***********************/\r\nclass NavBar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t//selectMap list looks like => [false, false, false, ....]\r\n\t\t//activeSilblings is a list of siblings parellel to selectMap\r\n\t\t//navlist is a list of immediate family members (family node)\r\n\t\t//feature is the members resulting  page (performance)\r\n\t\tthis.state = {\r\n\t\t\tselectMap: [true, false, false, false, false],//TruthList(navObjs.headerTabs), \r\n\t\t\tlastactiveId: null,\r\n\t\t\tactiveSiblings:navObjs.headerTabs,\r\n\t\t\tnavList:[],\r\n\t\t\tfeatured:VoltageDrop\r\n\t\t\t}\r\n\t\tthis.handleChildClick = this.handleChildClick.bind(this);\t\r\n\t};\r\n\r\n\thandleChildClick(event) {\r\n\t//moves up and down the family tree and displays performances\r\n\t\t/***setting up variables for code readability***/\r\n\t\tlet state = this.state;\r\n\t\tlet id = event.target.id;\r\n\t\tlet lastId = state.lastactiveId;\r\n\t\tlet truthList = state.selectMap;\r\n\t\tlet navList = state.navList;\r\n\r\n\r\n\t\t//getting family tree node of selected.\r\n\t\t//the Oldest in the family tree have no .display;\r\n\t\t//childless members have a .display;\r\n\t\t//node parents have a \"back\"  .display child value.\r\n\t\tlet navlength = navList.length;\r\n\t\tlet nextGen = state.activeSiblings[id].children;\r\n\t\tlet thisGen = state.activeSiblings;\r\n\t\tlet lastGen = navList[navlength -1];\r\n\r\n\r\n\t\t/***puting variable to work***/\r\n\t\tswitch(nextGen[0].display){\r\n\t\t\tcase 'Back':\r\n\t\t\t\tnavList.pop()\r\n\t\t\t\tlet lastGenTruthList = TruthList(lastGen)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tactiveSiblings:lastGen,\r\n\t\t\t\t\tselectMap:lastGenTruthList,\r\n\t\t\t\t\tnavList:navList\t\t\t\t\r\n\t\t\t\t});\tbreak;\r\n\r\n\t\t\tcase undefined:\r\n\t\t\t//if family member has children, lets see them\r\n\t\t\t\tlet nextGenTruthList = TruthList(nextGen);\r\n\t\t\t\t//let navLista = navList\r\n\t\t\t\tnavList[navlength] = thisGen\r\n\t\t\t\tconsole.log(thisGen)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tactiveSiblings:nextGen,\r\n\t\t\t\t\tselectMap:nextGenTruthList,\r\n\t\t\t\t\tnavList:navList,\r\n\t\t\t\t\tfeature:null\r\n\t\t\t\t});\tbreak;\r\n\r\n\t\t\tcase  true:\r\n\t\t\t// toggle between childless family member's performances.\r\n\r\n\t\t\t\t//getting last selected sibling's truth index to toggle\r\n\t\t\t\tlet lastChildState =  state.selectMap[lastId];\r\n\t\t\t\tlet feature = nextGen[0].feature\r\n\t\t\t\t//Toggle switch logic to confine select change to two siblings\r\n\t\t\t\t//last one sits down/performs when you ask another sibling\r\n\r\n\t\t\t\tfor ( let i = 0; i < truthList.length; i++){\r\n\t\t\t\t\ttruthList[i] = false;\r\n\t\t\t\t};\r\n\t\t\t\ttruthList[id] = true;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tif(id !== lastId) {truthList[id] = !truthList[id]}\r\n\t\t\t\t//next sibling sits up and down if you keep asking.\r\n\t\t\t\t//last sibling stays seated.\r\n\t\t\t\tswitch(id === lastId && lastChildState === false){\r\n\t\t\t\t\tcase true: truthList[lastId] = true;break;\r\n\t\t\t\t\tcase false: truthList[lastId] = false;break;\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t}*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t//updating state\t\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlastactiveId: id,\r\n\t\t\t\t\tfeatured: feature\r\n\r\n\t\t\t\t}); break\r\n\r\n\t\t\tdefault: break; \r\n\t\t} //switch\t\t\t\t\t\r\n\t}//event\r\n\t\r\n\r\n\trender(){\r\n\t\t// console.log(this.state.navList, 'list of visited arrays');\r\n\t\t// console.log(this.state.navList.length, 'number of visits');\r\n\t\t//console.log(this.state.activeSiblings, \"new tabs render\")\r\n\t\t//console.log(this.state.selectMap, \"updated active state\");\r\n\t\tlet currentNavebar = Tabs(this.handleChildClick, this.state);\r\n\t\tlet Featured = xmlTest(this.state.featured);\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className = 'navBarContainer'>\t\t\r\n\t\t\t\t\t{currentNavebar}\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Featured/>\t\r\n\t\t\t\t</div>\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NavBar;\r\n\r\n","import React from 'react';\r\nimport './colorMixStyle.css';\r\n\r\nvar colorStyle = {\r\n\tbackgroundColor: 'gray'\r\n}\r\n\r\nconst colorSliderObj =[ \r\n\t{name:'rgb', colors:[\r\n\t\t{name:'alpha', type:'range', min:'0', max:'1000', value:'defaultValue', class:'colorSlider', id:'alphaSlider', key:0},\r\n\t\t{name: 'red', type:'range', min:'0', max:'255', value:'defaultValue',  class:'colorSlider', id:'redSlider', key:1},\r\n\t\t{name: 'green', type:'range', min:'0', max:'255', value:'defaultValue',  class:'colorSlider', id:'greenSlider', key:2},\r\n\t\t{name:'blue', type:'range', min:'0', max:'255', value:'defaultValue',  class:'colorSlider', id:'blueSlider', key:3}\t\r\n\t\t]\r\n\t},\r\n\t{name:'hs1', colors:[\r\n\t\t{name:'alpha', type:'range', min:'0', max:'1', value:'defaultValue', class:'colorSlider', id:'alphaSlider', key:0},\r\n\t\t{name:'hue', type:'range', min:'0', max:'360', value:'defaultValue',  class:'colorSlider', id:'hueSlider', key:4},\r\n\t\t{name:'saturation',type:'range', min:'0', max:'100', value:'defaultValue',  class:'colorSlider', id:'saturationSlider', key:5},\r\n\t\t{name:'lightness', type:'range', min:'0', max:'100', value:'defaultValue',  class:'colorSlider', id:'lightSlider', key:6}\r\n\t\t]\r\n\t}\r\n]\r\n\r\n\t\t\r\n\t\r\n\r\nconst ColorSliders = (changeHandler, obj) => {\r\n\tlet sliders = obj.colors.map(( slider)=>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype ={slider.type}\r\n\t\t\t\t\tmin = {slider.min}\r\n\t\t\t\t\tmax = {slider.max}\r\n\t\t\t\t\t\r\n\t\t\t\t\tclassName = {slider.class}\r\n\t\t\t\t\tid = {slider.id}\r\n\t\t\t\t\tkey = {slider.key}\r\n\t\t\t\t\tonChange = {changeHandler} />\r\n\t);\t\r\n\treturn(\r\n\t\t<div className = \"sliderContainer\">\r\n\t\t\t\r\n\t\t\t{sliders}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nconst paint = (type, rh, gs, bl, a) => {\r\n\tlet color = null;\r\n\tif(type == 'rgb') {\r\n\t\tcolor ={backgroundColor:`rgba(${rh,gs,bl,a})`};\r\n\t\treturn( color);\r\n\r\n\t} else {\r\n\t\tcolor = {backgroundColor:`hsla(${rh,gs,bl,a})`};\r\n\t\treturn(color);\r\n\t}\r\n}\r\n\r\nclass ColorMixer extends React.Component {\r\n\tconstructor (props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname:'rgb',\r\n\t\t\tcolorMode:false,\r\n\t\t\tactiveColorMode:colorSliderObj[0],\r\n\t\t\tactiveColorName:'rgb',\r\n\t\t\tredValue:null,\r\n\t\t\tgreenValue:null,\r\n\t\t\tblueValue:null,\r\n\t\t\thueValue:null,\r\n\t\t\tsaturationValue:null,\r\n\t\t\tlightValue:null,\r\n\t\t\talpha:null\r\n\t\t}\r\n\t\tthis.rgbList = [this.state.redValue, this.state.greenValue, this.state.blueSlider, this.state.alpha];\r\n\t\tthis.hs1 = [this.state.hueValue, this.state.saturationValue, this.state.lightValue,this.state.alpha];\r\n\t\t\r\n\t\tthis.changeHandler = this.changeHandler.bind(this);\r\n\t\tthis.clickHandler = this.clickHandler.bind(this);\r\n\t\t};\r\n\r\n\t\tchangeHandler(event){\r\n\t\t\tlet state = this.state\r\n\t\t\tconsole.log(this.hs1)\r\n\t\t\tswitch(event.target.id){\r\n\t\t\t\tcase 'alpha':\r\n\t\t\t\t\tlet alpha = (event.target.value*.001)\r\n\t\t\t\t\tthis.setState({ 'alpha': alpha})\r\n\r\n\t\t\t\t case 'redSlider':\r\n\t\t\t\t\t this.setState({ redValue: event.target.value, name:'rgb' })\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'greenSlider':\r\n\t\t\t\t\tthis.setState({greenValue:event.target.value, name:\"rgb\" });\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'blueSlider':\r\n\t\t\t\t\tthis.setState({blueValue:event.target.value , name:\"rgb\"})\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hueSlider':\r\n\t\t\t\t\tthis.setState({hueValue:event.target.value,  name:'hs1'})\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'saturationSlider':\r\n\t\t\t\t\tthis.setState({saturationValue:event.target.value, name:'hs1'})\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'lightSlider':\r\n\t\t\t\t\tthis.setState({ lightValue:event.target.value, name:'hs1'})\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\t\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t};\r\n\r\n\r\n\t\tclickHandler(event){\r\n\t\t\tlet id = event.target.id;\r\n\r\n\t\t\tswitch(id){\r\n\t\t\t\tcase 'colorModeToggle':\r\n\t\t\t\t\tlet thisMode = !this.state.colorMode;\r\n\t\t\t\t\tlet activeColor = colorSliderObj[thisMode? 1:0];\r\n\t\t\t\t\tlet  name = activeColor.name;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tcolorMode: thisMode,\r\n\t\t\t\t\t\tactiveColorMode: activeColor,\r\n\t\t\t\t\t\tactiveColorName: name\r\n\t\t\t\t\t}); console.log(id); break;\r\n\r\n\t\t\t\t\tdefault: break;\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t\trender(){\r\n\t\t\tlet colorSetting = this.state.activeColorName.toUpperCase();\r\n\t\t\tlet colorMode = ColorSliders(this.changeHandler, this.state.activeColorMode);\r\n\t\t\tlet newColor = null;\r\n\t\t\tlet state = this.state\r\n\t\t\tif(this.state.name == 'hs1'){\r\n\t\t\t\tnewColor =  paint('hs1', this.state.hueValue, this.state.saturationValue, this.state.lightValue, this.state.alpha);\r\n\t\t\t}else {newColor =  paint('rgb',this. state.redValue,this.state.blueValue, this.state.greenValue, this.state.alpha);}\r\n\t\t\tconsole.log(newColor)\r\n\t\t\treturn(\r\n\t\t\t\t<div className = 'colorToolMainContainer'>this may take a while\r\n\t\t\t\t\t<div className = 'colorToolTopContainer'>\r\n\t\t\t\t\t\t<div onClick = {this.clickHandler} \r\n\t\t\t\t\t\t\tclassName = 'colorInputToggle' \tid = 'colorModeToggle'>{colorSetting}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className = 'colorToolBottomCon' style ={newColor}>\r\n\t\t\t\t\t\t{colorMode}\r\n\t\t\t\t\t\t<div className = 'colorDisplay' >something</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t</div>)\r\n\t\t}\r\n}\r\n\r\nexport default ColorMixer;","import React from 'react';\r\nimport './AppStyles.css';\r\nimport Header from '../components/Header';\r\nimport MainTabs from '../components/navBar/MainTabs';\r\nimport Boil from '../exercises/IsBoiling.js';\r\nimport voltageDrop from '../components/voltageDropCal/voltageDrop.js'\r\nimport Color from '../components/cssCals/cssTools/ColorMixer.js'\r\nimport { HashRouter, Rout, Link, Switch } from 'react-router-dom';\r\n\r\nconst App  = () => {\r\n\r\n\t\r\n\treturn(\r\n\t\t<HashRouter>\r\n\t\t\t<div className = 'app'>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t<MainTabs/>\t\r\n\t\t\t</div>\r\n\t\t</HashRouter>\r\n\t\t);\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './indexStyles.css';\nimport App from './containers/App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}